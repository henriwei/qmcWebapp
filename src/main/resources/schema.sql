
--SELECT concat('DROP TABLE IF EXISTS ', table_name, ';')  //this gives uss all the tables' names
--FROM information_schema.tables
--WHERE table_schema = 'spring_home_ex';

--set foreign_key_checks=0;  //disable the foreign key check in order to delete the tables.
--DROP TABLE IF EXISTS ...;
--...
--set foreign_key_checks=1;


--set foreign_key_checks=0;
--DROP TABLE IF EXISTS choice;
--DROP TABLE IF EXISTS correct_choice;
--DROP TABLE IF EXISTS question_multi_choice;
--DROP TABLE IF EXISTS tag;
--DROP TABLE IF EXISTS tag_question_association;
--DROP TABLE IF EXISTS wrong_choice;
--set foreign_key_checks=1;

CREATE TABLE QUESTION_MULTI_CHOICE (
	ID INT NOT NULL AUTO_INCREMENT,
	QUESTION VARCHAR(200) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE QUESTION_MULTI_CHOICE_UNIQUE_QUESTION (QUESTION)
);

CREATE TABLE CHOICE (
	QUESTION_ID INT NOT NULL,
	TEXT VARCHAR(100) NOT NULL,	/*it seems impossible to avoid duplication of choice for list of choice for a quesiton by adding unique constraint on TEXT column*/ 
	CORRECTNESS BOOLEAN,
	SELECTEDTIMES INT NOT NULL,
	CONSTRAINT CHOICE_FOREIGN_KEY FOREIGN KEY (QUESTION_ID)
	REFERENCES QUESTION_MULTI_CHOICE (ID)	
);

CREATE TABLE TAG (
	ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(20) NOT NULL,
	PRIMARY KEY (ID),
	UNIQUE TAG_UNIQUE_ID_1 (NAME)
);

CREATE TABLE TAG_QUESTION_ASSOCIATION (
	TAG_ID INT NOT NULL,
	QUESTION_ID INT NOT NULL,
	PRIMARY KEY (TAG_ID, QUESTION_ID),
	CONSTRAINT TAG_QUEST_ASS_FOREIGN_KEY_1 FOREIGN KEY (TAG_ID)
	REFERENCES TAG (ID) ON DELETE CASCADE,
	CONSTRAINT TAG_QUEST_ASS_FOREIGN_KEY_2 FOREIGN KEY (QUESTION_ID)
	REFERENCES QUESTION_MULTI_CHOICE (ID) ON DELETE CASCADE
)

--CREATE TABLE CORRECT_CHOICE (
--	QUESTION_MULTI_CHOICE_ID INT NOT NULL,
--	CHOICE_ID INT NOT NULL,
--	PRIMARY KEY (QUESTION_MULTI_CHOICE_ID, CHOICE_ID),
--	CONSTRAINT CORRECT_CHOICE_FOREIGN_KEY_1 FOREIGN KEY (QUESTION_MULTI_CHOICE_ID)
--	REFERENCES QUESTION_MULTI_CHOICE (ID) ON DELETE CASCADE,
--	CONSTRAINT CORRECT_CHOICE_FOREIGN_KEY_2 FOREIGN KEY (CHOICE_ID)
--	REFERENCES CHOICE (ID) ON DELETE CASCADE
--);
--
--CREATE TABLE WRONG_CHOICE (
--	QUESTION_MULTI_CHOICE_ID INT NOT NULL,
--	CHOICE_ID INT NOT NULL,
--	PRIMARY KEY (QUESTION_MULTI_CHOICE_ID, CHOICE_ID),
--	CONSTRAINT WRONG_CHOICE_FOREIGN_KEY_1 FOREIGN KEY (QUESTION_MULTI_CHOICE_ID)
--	REFERENCES QUESTION_MULTI_CHOICE (ID) ON DELETE CASCADE,
--	CONSTRAINT WRONG_CHOICE_FOREIGN_KEY_2 FOREIGN KEY (CHOICE_ID)
--	REFERENCES CHOICE (ID) ON DELETE CASCADE
--);